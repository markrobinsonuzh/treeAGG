% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/topNodes.R
\name{topNodes}
\alias{topNodes}
\title{Table of the top differential nodes}
\usage{
topNodes(data, sort.by = "FDR", decreasing = FALSE,
  col.rowData = NULL, col.linkData = NULL, use.assays = NULL)
}
\arguments{
\item{data}{A tree summarizedExperiment object output from
\code{\link{treeAGG}}}

\item{sort.by}{The name of the column to sort by}

\item{decreasing}{A logical value. TRUE or FALSE. Should the sorting be
decreasing or not.}

\item{col.rowData}{The names of columns to be extracted from \code{rowData}.}

\item{col.linkData}{The names of columns to be extracted from
\code{linkData}.}

\item{use.assays}{A numeric vector. It specifies the result of which table
should be shown. The default is NULL, all available results are shown;
otherwise, the result of the specified table (via the table number) is
shown. To recall, the table number is the number of table in \code{assays}
(e.g. 1 represents the first table). If users forgot which tables have been
used to do data analysis, they could check \code{use.assays} in the
\code{metadata} of input \code{data}.}
}
\value{
a list of data frame
}
\description{
\code{topNodes} extracts the top differential nodes in a data frame or a list
of data frame for a given pair of group, ranked by p-value or absolute change
(e.g. log-fold change)
}
\examples{
library(S4Vectors)
set.seed(1)
y <- matrix(rnbinom(300,size=1,mu=10),nrow=10)
colnames(y) <- paste(rep(LETTERS[1:3], each = 10), rep(1:10,3), sep = "_")
rownames(y) <- tinyTree$tip.label

rowInf <- DataFrame(nodeLab = rownames(y),
                    var1 = sample(letters[1:3], 10, replace = TRUE),
                    var2 = sample(c(TRUE, FALSE), 10, replace = TRUE))
colInf <- DataFrame(gg = factor(sample(1:3, 30, replace = TRUE)),
                    group = rep(LETTERS[1:3], each = 10))
toy_lse <- leafSummarizedExperiment(tree = tinyTree, rowData = rowInf,
                                    colData = colInf,
                                    assays = list(y, (2*y), 3*y))

toy_tse <- nodeValue(data = toy_lse, fun = sum, tree = tinyTree,
 message = TRUE)

# build the model
contrastList <- list(contrast1 = c(0, 0, 0, -1, 1),
                     contrast2 = c(0, -1, 1, 0, 0))
mod <- runEdgeR(obj = toy_tse, contrast = contrastList)
# results are stored as the column result_assay1, result_assay2, and
# result_assay3
(res <- rowData(mod, internal = TRUE))
# show results gained from the second element of the assasy
# sort by PValue
topNodes(mod, sort.by = "PValue", use.assays = 2)

}
\author{
Ruizhu HUANG
}
